// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: domain_stats.sql

package database

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

const createDomainStat = `-- name: CreateDomainStat :one
INSERT INTO domain_stats (
  id, url, referer, device_width, browser, platform, domain_session_id, created_at, updated_at
) VALUES (
  $1, $2, $3, $4, $5, $6, $7, $8, $9
)
RETURNING id, created_at, updated_at, url, referer, device_width, browser, platform, domain_session_id
`

type CreateDomainStatParams struct {
	ID              uuid.UUID
	Url             string
	Referer         sql.NullString
	DeviceWidth     sql.NullInt32
	Browser         sql.NullString
	Platform        sql.NullString
	DomainSessionID uuid.UUID
	CreatedAt       time.Time
	UpdatedAt       time.Time
}

func (q *Queries) CreateDomainStat(ctx context.Context, arg CreateDomainStatParams) (DomainStat, error) {
	row := q.db.QueryRowContext(ctx, createDomainStat,
		arg.ID,
		arg.Url,
		arg.Referer,
		arg.DeviceWidth,
		arg.Browser,
		arg.Platform,
		arg.DomainSessionID,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var i DomainStat
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Url,
		&i.Referer,
		&i.DeviceWidth,
		&i.Browser,
		&i.Platform,
		&i.DomainSessionID,
	)
	return i, err
}
